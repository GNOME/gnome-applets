stages:
  - build
  - analysis

variables:
  DEBIAN_FRONTEND: noninteractive

.install-ubuntu-dependencies: &install-ubuntu-dependencies
  apt-get install -q -y --no-install-recommends
                  adwaita-icon-theme
                  autoconf-archive
                  automake
                  autopoint
                  build-essential
                  ca-certificates
                  docbook-to-man
                  docbook-xsl
                  gettext
                  git
                  gnome-settings-daemon-dev
                  gtk-doc-tools
                  libcpufreq-dev
                  libdconf-dev
                  libgdm-dev
                  libglib2.0-dev
                  libgnome-desktop-3-dev
                  libgnome-menu-3-dev
                  libgtk-3-dev
                  libgtop2-dev
                  libgucharmap-2-90-dev
                  libgweather-3-dev
                  libnotify-dev
                  libpolkit-gobject-1-dev
                  libtracker-sparql-2.0-dev
                  libtool
                  libupower-glib-dev
                  libwnck-3-dev
                  libx11-dev
                  libxml2-dev
                  policykit-1
                  x11proto-dev
                  yelp-tools

.build-gnome-panel: &build-gnome-panel
  - git clone https://gitlab.gnome.org/GNOME/gnome-panel.git
  - cd gnome-panel
  - ./autogen.sh --disable-Werror --disable-gtk-doc --prefix=/usr
  - make
  - make install
  - cd ..

ubuntu:
  image: ubuntu:devel
  stage: build
  except:
    - tags
  before_script:
    - apt-get update
    - *install-ubuntu-dependencies
    - *build-gnome-panel
  script:
    - ./autogen.sh --enable-tracker-search-bar
    - make
    - make distcheck

coverity:
  image: ubuntu:devel
  stage: analysis
  when: manual
  before_script:
    - apt-get update
    - *install-ubuntu-dependencies
    - apt-get install -q -y --no-install-recommends
                      clang
                      curl
    - *build-gnome-panel
  script:
    - curl https://scan.coverity.com/download/linux64
      --data "token=$COVERITY_TOKEN&project=gnome-applets"
      --output /tmp/coverity_tool.tgz
    - tar zxf /tmp/coverity_tool.tgz
    - CC=clang ./autogen.sh --disable-Werror --enable-tracker-search-bar
    - ./cov-analysis-linux64-*/bin/cov-build --dir cov-int make
    - tar czf cov-int.tar.gz cov-int
    - curl --form token=$COVERITY_TOKEN
      --form email=$GITLAB_USER_EMAIL
      --form file=@cov-int.tar.gz
      --form version="$(autoconf --trace='AC_INIT:$2')-$CI_COMMIT_SHORT_SHA"
      https://scan.coverity.com/builds?project=gnome-applets
  only:
    - master
